% This file is part of Jiffy released under the MIT license.
% See the LICENSE file for more information.
%
% Only run the EQC checks when EQC is present.

HaveEQC = code:which(eqc) =/= non_existing,

ErlOpts = if not HaveEQC -> []; true ->
    [{d, 'HAVE_EQC'}]
end,

PreHooks = [
    {"(linux|darwin|solaris|gnu)", compile, "make -C c_src"},
    {"(freebsd|netbsd|openbsd|dragonfly)", compile, "gmake -C c_src"}
],

MakeHooks = fun (ConfigX, LtoSupport) ->
    HasLtoSupport =
        case LtoSupport of
            has_lto -> " HAVE_LTO=1";
            no_lto  -> ""
        end,
    Hooks = {pre_hooks, [{A, B, C ++ HasLtoSupport} || {A, B, C} <- PreHooks]},
    lists:keyreplace(pre_hooks, 1, ConfigX, Hooks)
end,

Config1 = case lists:keyfind(erl_opts, 1, CONFIG) of
    {erl_opts, Opts} ->
        NewOpts = {erl_opts, Opts ++ ErlOpts},
        lists:keyreplace(erl_opts, 1, CONFIG, NewOpts);
    false ->
        CONFIG ++ [{erl_opts, ErlOpts}]
end,

Config2 = case os:type() of
    {unix, _} ->
        CC = case os:getenv("CC") of
            false -> "cc";
            Else -> Else
        end,
        FLTO_CHECK = "echo 'int main(int argc, char *argv[]) {return 0;}' | "
                ++ CC ++ " -c -x c -o /dev/null -flto -",
        case os:cmd(FLTO_CHECK) of
            [] ->
                MakeHooks(Config1, has_lto);
            _ ->
                MakeHooks(Config1, no_lto)
        end;
    _ ->
        MakeHooks(Config1, no_lto)
end,

Config2.
